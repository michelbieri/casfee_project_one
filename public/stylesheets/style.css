
:root {
    --primary-color: #1959f4;
    --secondary-color: #e3e3e4;
    --font-color: #424242;
    --bg-color: #fff;
    --heading-color: #292922;
}

[data-theme="dark"] {
    --primary-color: #eb4b80;
    --secondary-color: #333a44;
    --font-color: #e1e1ff;
    --bg-color: #202224;
    --heading-color: #818cab;
}

body {
    background-color: var(--bg-color);
    color: var(--font-color);
    max-width: 90%;
    margin: 0 auto;
    font-size: calc(1rem + 0.25vh);
    font-family: "Helvetica";
}

.container {
    display: grid;
    grid-template-columns: auto;
    grid-template-rows: auto 1fr auto auto;
    grid-template-areas: "header" "section" "content";
    grid-column-gap: 5px;
    grid-row-gap: 5px;
    border-radius: 5px;
    margin: 5px;
    box-shadow: 0 4px 8px 0 rgba(72, 72, 74, 0.2);
}

.grid {
    padding: 10px;
    font-size: 1rem;
}

.header { grid-area: header;
    display: grid;
    grid-template-columns: auto 1fr auto;
}

.section { grid-area: section;
    display: grid;
    grid-template-columns: auto 1fr auto;
    grid-template-rows: auto;
}

.content { grid-area: content;  }

.taskitem {
    display: grid;
    grid-template-columns: 30% auto;
    grid-template-rows: 1fr;
    padding: 2px;
    margin: 0px 0px 5px 0px;
    background-color: transparent;
    border: 1px solid #ccc;
    border-radius: 5px;
    padding: 10px;
}

.due {
    display: grid;
    grid-template-columns: auto;
    grid-template-rows: 1fr;
}

.description {
    display: grid;
    grid-template-columns: 1fr auto;
}

.expandable-paragraph {
    padding: 5px 5px;
    width: 1fr;
    font-size: 14px;
}

.truncate {
    display: block;
    max-width: 250px;
    overflow: hidden;
    text-overflow: ellipsis;
    transition: all .2s;
    white-space: nowrap;

}

.expandable-paragraph :hover {
    white-space: normal;
}

.priority {
    display: grid;
    grid-template-columns: 1fr auto;
    grid-template-rows: 40px;
    align-self: center;
    font-style: bold;
}


.priority-system{
    width:auto;
    display:inline-block;
    margin:20px;
    position: relative;
}

.priority-system label{
    float:right;
    display:inline-block;
    width:20px;
    height:5px;
    background:#ccc;
    margin:4px;
    position: relative;
    transition:all .3s;
}

/*second*/
.priority-system label{
    width:10px;
    height:10px;
    border-radius:100%;
    margin:0 10px;
}

.priority-system label:before{display:none;}
.priority-system label:hover ~ label,
.priority-system label:hover
{
    box-shadow: 0 0 0 2px var(--primary-color),
    inset 0 0 0 5px #333;

}

.priority-system input:checked ~ label{
    background:var(--primary-color);
    box-shadow: 0 0 0 2px var(--primary-color);

}

form {
    display: grid;
    grid-template-columns: auto 1fr;
    grid-template-rows: auto;
    grid-gap: .5em;
    grid-column-gap: 10px;
    grid-row-gap: 15px;
    padding: 10px;
    margin: 15px;
    border-radius: 4px;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
}

.hiddeninput{
    display:none;
}

/* Common button styles */
button {
    float: left;
    min-width: 50px;
    max-width: 250px;
    display: block;

    padding: 1em 2em;

    background: none;
    color: inherit;
    vertical-align: middle;
    position: relative;
    z-index: 1;
    border-radius: 5px;
}



select {
    float: left;
    min-width: 50px;
    max-width: 250px;
    display: block;
    border-radius: 0;
    padding: 1em 2em;

    background: none;
    color: inherit;
    vertical-align: middle;
    position: relative;
    z-index: 1;
}


button:focus {
    outline: none;
}

button > span {
    vertical-align: middle;
}

.filter-button:active,
.filter-button.is-checked {
    background-color: var(--primary-color);
}

.filter-button.is-checked {
    color: white;
    text-shadow: 0 -1px hsla(0, 0%, 0%, 0.8);
}

.filter-button:active {
    box-shadow: inset 0 1px 10px hsla(0, 0%, 0%, 0.8);
}

/* ---- button-group ---- */
.button-group:after {
    content: '';
    display: block;
    clear: both;
}

.button-group .filter-button {
    float: left;
    margin-left: 0;
}

textarea, input {
    resize: none;
}

/* Customize the label (the container) */
.checkbox-container {
    display: block;
    position: relative;
    height: 25px;
    width: 25px;
    cursor: pointer;
    font-size: 22px;
    border-radius: 5px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* Hide the browser's default checkbox */
.checkbox-container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

/* Create a custom checkbox */
.checkmark {
    position: absolute;
    height: 25px;
    width: 25px;
    border-radius: 5px;
    background-color: #eee;
}

/* On mouse-over, add a grey background color */
.checkbox-container:hover input ~ .checkmark {
    background-color: #ccc;
    border-radius: 5px;
}

/* When the checkbox is checked, add a blue background */
.checkbox-container input:checked ~ .checkmark {
    background-color: var(--primary-color);
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.checkbox-container input:checked ~ .checkmark:after {
    display: block;
}

/* Style the checkmark/indicator */
.checkbox-container .checkmark:after {
    left: 9px;
    top: 5px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}





